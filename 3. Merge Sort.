#include <iostream>
#include <cstdlib>
#include <chrono>
#include <limits>
using namespace std;
void merge(int a[], int p, int q, int r)
{
 int n1 = q - p + 1;
 int n2 = r - q;
 int l[n1 + 1];
 int rig[n2 + 1];
 for (int i = 0; i < n1; i++)
 {
 l[i] = a[p + i];
 }
 for (int j = 0; j < n2; j++)
 {
 rig[j] = a[q + 1 + j];
 }
 l[n1] = numeric_limits<int>::max();
 rig[n2] = numeric_limits<int>::max();
 int i = 0, j = 0;
 for (int k = p; k <= r; k++)
 {
 if (l[i] <= rig[j])
 { a[k] = l[i];
 i++;
 }
 else
 {
 a[k] = rig[j];
 j++;
 }
 }
}
void merge_sort(int a[], int p, int r)
{
 if (p < r)
 {
 int q = (p + r) / 2;
 merge_sort(a, p, q);
 merge_sort(a, q + 1, r);
 merge(a, p, q, r);
 }
}
int main()
{
 const int n = 100;
 int a[n];
 for (int i = 0; i < n; i++)
 {
 a[i] = rand() % n + 1;
 }
 auto start = chrono::high_resolution_clock::now();
 for (int i = 0; i < 1000; i++)
 {
 merge_sort(a, 0, n - 1);
 }
 auto end = chrono::high_resolution_clock::now();
 chrono::duration<double, milli> elapsed = end - start;
 cout << "Sorted array is: ";
 for (int i = 0; i < n; i++)
 {
 cout << a[i] << " ";
 }
 cout << endl;
 cout << "Time taken to sort the array over 1000 loops: " <<
elapsed.count() << " ms" << endl;
 return 0;
}
